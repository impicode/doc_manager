name: cd

on: [push, pull_request]

jobs:
  cd:
    if: github.event_name == 'push' && github.ref == 'refs/heads/tys/pypi'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10", "3.11"]
        django-version: ["==3.2.*", "==4.0.*", "==4.1.*"]
        exclude:
          - python-version: "3.6"
            django-version: "==4.0.*"
          - python-version: "3.6"
            django-version: "==4.1.*"
          - python-version: "3.7"
            django-version: "==4.0.*"
          - python-version: "3.7"
            django-version: "==4.1.*"
          - python-version: "3.11"
            django-version: "==3.2.*"
          - python-version: "3.11"
            django-version: "==4.0.*"
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install Django${{ matrix.django-version }}

    - name: Check-out repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Install poetry
      uses: snok/install-poetry@v1

    - name: Install package
      run: poetry install

    - name: Use Python Semantic Release to prepare release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          poetry run semantic-release publish

    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/

    - name: Test install from TestPyPI
      run: |
          pip install \
          --index-url https://test.pypi.org/simple/ \
          --extra-index-url https://pypi.org/simple \
          doc-manager